<h1>Lista de Productos en Tiempo Real</h1>
<ul id="product-list">
  {{#each productos}}
    <li id="producto-{{this.id}}">
      <strong>{{this.title}}</strong> - ${{this.price}}
      <button onclick="eliminarProducto({{this.id}})">‚ùå</button>
    </li>
  {{/each}}
</ul>

<h2>Agregar Producto</h2>
<form id="product-form">
  <input type="text" id="title" placeholder="Nombre" required />
  <input type="text" id="description" placeholder="Descripci√≥n" required />
  <input type="number" id="price" placeholder="Precio" required />
  <input type="text" id="thumbnail" placeholder="Imagen" />
  <input type="text" id="code" placeholder="C√≥digo" required />
  <input type="number" id="stock" placeholder="Stock" required />
  <button type="submit">Agregar</button>
</form>

<script>
  const socket = io();

  document.getElementById("product-form").addEventListener("submit", async (event) => {
    event.preventDefault();

    const producto = {
      title: document.getElementById("title").value,
      description: document.getElementById("description").value,
      price: parseFloat(document.getElementById("price").value),
      thumbnail: document.getElementById("thumbnail").value,
      code: document.getElementById("code").value,
      stock: parseInt(document.getElementById("stock").value),
    };

    console.log("üì§ Enviando producto al servidor:", producto);

    const response = await fetch("/products", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(producto),
    });

    const data = await response.json();
    console.log("üì© Respuesta del servidor:", data);
  });

  async function eliminarProducto(id) {
    try {
    console.log("üóë Eliminando producto ID:", id);
    const response = await fetch(`/products/${id}`, {
      method: "DELETE",
    });

    if (!response.ok) {
      throw new Error(`Error en la eliminaci√≥n: ${response.status}`);
    }

    const data = await response.json();
    console.log("üì© Respuesta del servidor tras eliminar:", data);
  } catch (error) {
    console.error("‚ùå Error al eliminar producto:", error.message);
  }
}

  socket.on("actualizarProductos", (productos) => {
    console.log("üì° Recibida actualizaci√≥n de productos:", productos);

    const productList = document.getElementById("product-list");
    productList.innerHTML = ""; // Limpiar la lista antes de actualizar

    productos.forEach((producto) => {
      const item = document.createElement("li");
      item.id = `producto-${producto.id}`;
      item.innerHTML = `<strong>${producto.title}</strong> - $${producto.price} 
                        <button onclick="eliminarProducto(${producto.id})">‚ùå</button>`;
      productList.appendChild(item);
    });
  });
</script>
